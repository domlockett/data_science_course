}
}
for(i in 1:50){
a<-mean(subset(congress_age$age, congress_age$state == unique(congress_age$state[i])))
}
congress_stats <- function(stats){
if(stats == 'mean age'){
for(i in 1:50){
a<-mean(subset(congress_age$age, congress_age$state == unique(congress_age$state[i])))
}
print(paste(a, unique(congress_age$state[i], sep " ")))
}
}
congress_stats <- function(stats){
if(stats == 'mean age'){
for(i in 1:50){
a <- mean(subset(congress_age$age, congress_age$state == unique(congress_age$state[i])))
} print(a)
}
}
library(fivethirtyeight)
congress_stats <- function(stats){
if(stats == 'mean age'){
for(i in 1:50){
a <- mean(subset(congress_age$age, congress_age$state == unique(congress_age$state[i])))
} print(a)
}
}
congress_stats <- function(stats){
if(stats == '')
for(i in 1:50){
a<-mean(subset(congress_age$age, congress_age$state == unique(congress_age$state[i])))
print(a)
}
}
congress_stats <- function(stats){
if(stats == 'mean age'){
for(i in 1:50){
a <- mean(subset(congress_age$age, congress_age$state == unique(congress_age$state[i])))
print(a)
}
}
congress_stats <- function(stats){
if(stats == 'mean age'){
for(i in 1:50){
a<-mean(subset(congress_age$age, congress_age$state == unique(congress_age$state[i])))
print(paste(a, unique(congress_age$state[i], sep " ")))
}
}
congress_stats <- function(stats){
if(stats == 'mean age'){
for(i in 1:50){
a<-mean(subset(congress_age$age, congress_age$state == unique(congress_age$state[i])))
print(paste(a, unique(congress_age$state[i], sep= " ")))
}
}
}
congress_stats('mean age')
congress_stats <- function(stats){
if(stats == 'mean age'){
for(i in 1:50){
a<-mean(subset(congress_age$age, congress_age$state == unique(congress_age$state[i]), digits =3))
print(paste(a, unique(congress_age$state[i], sep= " ")))
}
}
congress_stats('mean age')
congress_stats <- function(stats){
if(stats == 'mean age'){
for(i in 1:50){
a<-mean(subset(congress_age$age, congress_age$state == unique(congress_age$state[i]), digits =3))
print(paste(a, unique(congress_age$state[i], sep= " ")))
}
}
congress_stats('mean age')
congress_stats <- function(stats){
if(stats == 'mean age'){
for(i in 1:50){
a<-mean(subset(congress_age$age, congress_age$state == unique(congress_age$state[i]), digits =3))
print(paste(a, unique(congress_age$state[i], sep= " ")))
}}
}
congress_stats <- function(stats){
if(stats == 'mean age'){
for(i in 1:50){
a<-mean(subset(congress_age$age, congress_age$state == unique(congress_age$state[i]), digits =3))
print(paste(a, unique(congress_age$state[i], sep= " ")))
}}
}
congress_stats('mean age')
congress_stats <- function(stats){
if(stats == 'mean age'){
for(i in 1:50){
a<-mean(subset(congress_age$age, congress_age$state == unique(congress_age$state[i])), digits =3)
print(paste(a, unique(congress_age$state[i], sep= " ")))
}}
}
congress_stats('mean age')
?means
?mean
congress_stats <- function(stats){
if(stats == 'mean age'){
for(i in 1:50){
a<-round(mean(subset(congress_age$age, congress_age$state == unique(congress_age$state[i])), digits =3), digits =3)
print(paste(a, unique(congress_age$state[i], sep= " ")))
}}
}
congress_stats('mean age')
congress_stats <- function(stats){
if(stats == 'mean age'){
for(i in 1:50){
a<-round(mean(subset(congress_age$age, congress_age$state == unique(congress_age$state[i])), digits =3), digits =1)
print(paste(a, unique(congress_age$state[i], sep= " ")))
}}
}
congress_stats('mean age')
sum(unique(congress_stats$congress))
(unique(congress_stats$congress))
sum(unique(congress_age$congress))
unique(congress_age$congress
)
congress_stats <- function(stats){
if(stats == 'state'){
for(i in 1:50){
a<-round(mean(subset(congress_age$age, congress_age$state == unique(congress_age$state[i])), digits =3), digits =1)
print(paste(a, unique(congress_age$state[i], sep= " ")))}
}else if(stats =="congress"){
for(i in 1:34){
a<-round(mean(subset(congress_age$age, congress_age$congress == unique(congress_age$congress[i])), digits =3), digits =1)
print(paste(a, unique(congress_age$congress[i], sep= " ")))}
}
}
congress_stats <- function(stats){
if(stats == 'state'){
for(i in 1:50){
a<-round(mean(subset(congress_age$age, congress_age$state == unique(congress_age$state[i])), digits =3), digits =1)
print(paste(a, unique(congress_age$state[i], sep= " ")))}
}else if(stats =="congress"){
for(i in 1:34){
a<-round(mean(subset(congress_age$age, congress_age$congress == unique(congress_age$congress[i])), digits =3), digits =1)
print(paste(a, unique(congress_age$congress[i], sep= " ")))}
}}
congress_stats('congress')
congress_stats('congress')
unique(congress_age$congress)[1]
unique(congress_age$congress)[2]
unique(congress_age$congress)[3]
congress_stats <- function(stats){
if(stats == 'state'){
for(i in 1:50){
a<-round(mean(subset(congress_age$age, congress_age$state == unique(congress_age$state[i]))), digits =1)
print(paste(a, unique(congress_age$state[i]), sep= " "))}
}else if(stats =="congress"){
for(i in 1:34){
a<-round(mean(subset(congress_age$age, congress_age$congress == unique(congress_age$congress[i]))), digits =1)
print(paste(a, unique(congress_age$congress[i]), sep= " "X))}
}}
congress_stats('congress')
congress_stats <- function(stats){
if(stats == 'state'){
for(i in 1:50){
a<-round(mean(subset(congress_age$age, congress_age$state == unique(congress_age$state[i]))), digits =1)
print(paste(a, unique(congress_age$state[i]), sep= " "))}
}else if(stats =="congress"){
for(i in 1:34){
a<-round(mean(subset(congress_age$age, congress_age$congress == unique(congress_age$congress)[i])), digits =1)
print(paste(a, unique(congress_age$congress)[i], sep= " "X))}
}}
congress_stats('congress')
unique(congress_age$congress)[2]
unique(congress_age$congress)[5]
congress_stats <- function(stats){
if(stats == 'state'){
for(i in 1:50){
a<-round(mean(subset(congress_age$age, congress_age$state == unique(congress_age$state[i]))), digits =1)
print(paste(a, unique(congress_age$state[i]), sep= " "))}
}else if(stats =="congress"){
for(i in 1:34){
a<-round(mean(subset(congress_age$age, congress_age$congress == unique(congress_age$congress)[i])), digits =1)
print(paste(a, unique(congress_age$congress)[i], sep= " "))}
}}
congress_stats('congress')
congress_stats('state')
View(cand_events_20150114)
mean(data$days[data$president=='Reagan'], na.rm=T)
data <- congress_turnover
mean(data$days[data$president=='Reagan'], na.rm=T)
mean(data$days[data$president=='Reagan'], na.rm=T)
data$days
data <- cabinet_turnover
mean(data$days[data$president=='Reagan'], na.rm=T)
mean(data$days[data$president=='Reagan'], na.rm=T)/mean(data$days[data$president=='Reagan'], na.rm=T)
mean(data$days[data$president=='Reagan'], na.rm=T)/2922
congress_stats <- function(stats){
if(stats == 'state'){
for(i in 1:50){
a<-round(mean(subset(congress_age$age, congress_age$state == unique(congress_age$state[i]))), digits =1)
print(paste(a, unique(congress_age$state[i]), sep= " "))}
}else if(stats =="congress"){
for(i in 1:34){
a<-round(mean(subset(congress_age$age, congress_age$congress == unique(congress_age$congress)[i])), digits =1)
print(paste(a, unique(congress_age$congress)[i], sep= " "))}
}}
congress_stats('state')
congress_stats('congress')
average.days <- function(administration){
if(administration == 'Reagan'){
mean(cabinet_turnover$days[cabinet_turnover$president=='Reagan'], na.rm=T)/2922
}else if(administration == 'Carter'){
mean(cabinet_turnover$days[cabinet_turnover$president=='Carter'], na.rm=T)/1461
}else if(administration == 'Bush 41'){
mean(cabinet_turnover$days[cabinet_turnover$president=='Bush 41'], na.rm=T)/1461
}else if(administration == 'Clinton'){
mean(cabinet_turnover$days[cabinet_turnover$president=='Clinton'], na.rm=T)/2922
}else if(administration == 'Bush 43'){
mean(cabinet_turnover$days[cabinet_turnover$president=='Bush 43'], na.rm=T)/2922
}else if(administration == 'Obama'){
mean(cabinet_turnover$days[cabinet_turnover$president=='Obama'], na.rm=T)/2922
}else if(administration == 'Trump'){
mean(cabinet_turnover$days[cabinet_turnover$president=='Trump'], na.rm=T)/1105
}
}
average.days('Reagan')
average.days('Trump')
gss <- read.csv('http://politicaldatascience.com/PDS/Problem%20Sets/Problem%20Set%202/GSS-data.csv. ')
gss <- read.csv('http://politicaldatascience.com/PDS/Problem%20Sets/Problem%20Set%202/GSS-data.csv')
vote.choice <- function(x){
if((x =="Trump")){
cat(sum(gss$pres16=="Trump"), "voted for Donald Trump")
}else if(x =="Clinton"){
cat(sum(gss$pres16=="Clinton"), "voted for Hilary Clinton")
}else if(x =="Other") {cat(sum(gss$pres16!= "Clinton"&gss$pres16 != "Trump"),
"did not report voting for either candidant")
}else if(x!= "Clinton" & x!= "Trump" & x!= "Other"){
print("Please enter either 'Trump' 'Clinton' or
'Other' into the function to return valid response")
}
}
vote.choice('Trump')
vote.choice('Clinton')
vote.choice('Other')
vote.choice('but')
install.packages("microbenchmark")
webData<-url("http://pages.wustl.edu/montgomery/incumbents2.txt")
OOS <- read.table(webData)
summary(OOS)
by.var.lm<-function(by.var, formula, data, coef.num){
output.vector<-NULL; print("one")
for (i in unique(by.var)){
print(i) # I can see where I get to in the loop
output.vector[which(unique(by.var) == i)]<-
lm(formula, data=data[by.var == i,])$coefficients[coef.num]
}
print('got out of loop')
return(output.vector)
}
plot(by.var.lm(year, voteshare~inparty, OOS, 2), type="l")
traceback()
debug(by.var.lm)
webData<-url("http://pages.wustl.edu/montgomery/incumbents2.txt")
OOS <- read.table(webData)
summary(OOS)
by.var.lm<-function(by.var, formula, data, coef.num){
output.vector<-NULL; print("one")
for (i in unique(by.var)){
print(i) # I can see where I get to in the loop
output.vector[which(unique(by.var) == i)]<-
lm(formula, data=data[by.var == i,])$coefficients[coef.num]
}
print('got out of loop')
return(output.vector)
}
plot(by.var.lm(year, voteshare~inparty, OOS, 2), type="l")
debug(by.var.lm
)
by.var.lm(year, voteshare~inparty, OOS, 2)
coef.num
browser()
browser()
coef.num
undebug(by.var.lm)
browser()
coef.num
install.package("tidyverse")
install.package("tidyverse")
install.packages("tidyverse")
library(tidyverse)
install.packages(c("DeclareDesign", "fabricatr", "randomizr", "estimatr", "DesignLibrary"))
library(pwr)
pwr.2p2n.test(h = , n1 = 500, n2 = 500, sig.level = 0.05)
pwr.2p2n.test(h = , n1 = 500, n2 = 500, sig.level = 0.05, power =.8)
cohen.ES(test = "t", size = "medium")
pwr.t.test(n = 1000, d = 0.5, sig.level = 0.05)
pwr.t.test(n = 1000, d = c(.025,0.5,.75), sig.level = 0.05)
pwr.t.test(n = 1000, d = , sig.level = c(.001,.01,0.05), power =.8)
pwr.t.test(n = 1000, d = , sig.level = (.001), power =.8)
pwr.t.test(n = 1000, d = , sig.level = (.001), power =.8)
pwr.t.test(n = 1000, d = , sig.level = (.01), power =.8)
pwr.t.test(n = 1000, d = , sig.level = (.05), power =.8)
seq(.001:.05, .025)
seq(.0001:.05, .0025)
seq(.0001:.05, by=.0025)
seq(.0001:.05, by=.025)
seq(.0001:.05, by=.05)
p.out <-as.data.frame(cbind(seq(.0001:.05, by=.05), NA)
)
p.out
pwr.t.test(n = 1000, d = , sig.level = (.001), power =.8)
pwr.t.test(n = 1000, d = , sig.level = (.001), power =.8)[2]
for(i in 1:length(seq(.0001:.05, by=.05))){
p.out[i,2] <- pwr.t.test(n = 1000, d = , sig.level = p.out[i,1], power =.8)
}
warnings()
p.out <-as.data.frame(cbind(seq(.0001:.05, by=.05), NA))
p.out
for(i in 1:length(seq(.0001:.05, by=.05))){
p.out[i,2] <- pwr.t.test(n = 1000, d = , sig.level = p.out[i,1], power =.8)[2]
}
p.out
p.out <-as.data.frame(cbind(seq(.0001:.05, by=.05), NA))
p.out
p.out <-as.data.frame(cbind(seq(.0001:.05, by=.005), NA))
cohen.ES(test = "t", size = "medium")
p.out
p.out <-as.data.frame(cbind(seq(.05:.0001, by=.005), NA))
p.out
p.out <-as.data.frame(cbind(seq(.05:.0001, by=.0005), NA))
p.out
?seq
p.out <-as.data.frame(cbind(seq(.05,.0001, by=.0005), NA))
p.out <-as.data.frame(cbind(seq(.0001,.05, by=.005), NA))
p.out
p.out <-as.data.frame(cbind(seq(.0001,.05, by=.0025), NA))
p.out
for(i in 1:length(seq(.0001:.05, by=.05))){
p.out[i,2] <- pwr.t.test(n = 1000, d = , sig.level = p.out[i,1], power =.8)[2]
}
p.out
plot(p.out)
t(p.out)
rev(p.out)
plot(rev(p.out))
p,out <- rev(p.out)
colnames(p.out) <- c("Effect Size", "P-Value")
plot(p.out)
p.out <- rev(p.out)
colnames(p.out) <- c("Effect Size", "P-Value")
plot(p.out)
plot(p.out, xlab= c(.1, .25))
plot(p.out, xlim= c(.1, .25))
plot(p.out, xlim= c(.13, .25))
plot(p.out, xlim= c(.125, .25))
plot(p.out, xlim= seq(.125, .25, by = .025))
plot(p.out, xlim= seq(.125, .25, by = .01))
seq(.125, .25, by = .01)
plot(p.out, xlim= c(.125, .25, by = .01))
plot(p.out, xlim= c(.125, .25))
plot(p.out, xlim= c(.125, .25), type ="line")
plot(p.out, xlim= c(.125, .22), type ="line")
plot(p.out, xlim= c(.125, .22), type ="line", title = "Significance by Effect Size given Fixed Sample")
plot(p.out, xlim= c(.125, .22), type ="line", main = "Significance by Effect Size given Fixed Sample")
?plot
plot(p.out, xlim= c(.125, .22), type ="b", main = "Significance by Effect Size given Fixed Sample", )
p.out
p <- rev(p.out[,1])
p
p.out <- cbind(rev(p.out[,1]), rev(p.out[,2])
)
p.out
colnames(p.out) <- c("Effect Size", "P-Value")
plot(p.out, xlim= c(.125, .22), type ="b", main = "Significance by Effect Size given Fixed Sample", )
plot(p.out, xlim= c(.125, .22), type ="b", main = "Significance by Effect Size given Fixed Sample" )
p.out
p.out <- as.data.frame(p.out)
p.out
plot(p.out, xlim= c(.125, .22), type ="b", main = "Significance by Effect Size given Fixed Sample" )
plot(p.out, xlim= c(.125, .22), type ="b", main = "Significance by Effect Size given Fixed Sample" )
plot(p.out, xlim= c(.125, .22), type ="b", main = "Significance by Effect Size given Fixed Sample", col = "aqua" )
plot(p.out, xlim= c(.125, .22), type ="b", main = "Significance by Effect Size given Fixed Sample", col = "aquamarine4" )
plot(p.out, xlim= c(.125, .22), type ="b", main = "Significance by Effect Size given Fixed Sample", col = "aquamarine4", lwd=2 )
plot(p.out, xlim= c(.11, .212), type ="b", main = "Significance by Effect Size given Fixed Sample", col = "aquamarine4", lwd=2 )
plot(p.out, xlim= c(.12, .212), type ="b", main = "Significance by Effect Size given Fixed Sample", col = "aquamarine4", lwd=2 )
plot(p.out, axes=F, type ="b", main = "Significance by Effect Size given Fixed Sample", col = "aquamarine4", lwd=2 )
plot(p.out, xlim= c(seq(.12, .212, by = .025)), type ="b", main = "Significance by Effect Size given Fixed Sample", col = "aquamarine4", lwd=2 )
source('~/.active-rstudio-document', echo=TRUE)
plot(p.out,axes =F, type ="b", main = "Significance by Effect Size given Fixed Sample", col = "aquamarine4", lwd=2 )
axis(labels=NA,side=1,tck=-0.015,at=c(seq(from=0,to=.05,by=.01))) # labels = NA prevents the creation of the numbers and tick marks, tck is how long the tick mark is.
axis(labels=NA,side=1,tck=-0.015,at=c( xlim= c(seq(.12, .212, by = .025)))) # labels = NA prevents the creation of the numbers and tick marks, tck is how long the tick mark is.
axis(labels=NA,side=1,tck=0.015,at=c( xlim= c(seq(.12, .212, by = .025)))) # labels = NA prevents the creation of the numbers and tick marks, tck is how long the tick mark is.
axis(labels=NA,side=1,tck=0.12,at=c( xlim= c(seq(.12, .212, by = .025)))) # labels = NA prevents the creation of the numbers and tick marks, tck is how long the tick mark is.
axis(labels=NA,side=1,tck=0.012,at=c( xlim= c(seq(.12, .212, by = .025)))) # labels = NA prevents the creation of the numbers and tick marks, tck is how long the tick mark is.
plot(p.out,axes =F, type ="b", main = "Significance by Effect Size given Fixed Sample", col = "aquamarine4", lwd=2 )
axis(labels=NA,side=1,tck=0.012,at=c( xlim= c(seq(.12, .212, by = .025)))) # labels = NA prevents the creation of the numbers and tick marks, tck is how long the tick mark is.
axis(side=1,tck=0.012,at=c( xlim= c(seq(.12, .212, by = .025)))) # labels = NA prevents the creation of the numbers and tick marks, tck is how long the tick mark is.
axis(side=1,tck=0.012,at=c( xlim= c(seq(.12, .212, by = .0025)))) # labels = NA prevents the creation of the numbers and tick marks, tck is how long the tick mark is.
axis(side=1,tck=0.012,at=c( xlim= c(seq(.12, .22, by = .0025)))) # labels = NA prevents the creation of the numbers and tick marks, tck is how long the tick mark is.
axis(side=1,tck=0.012,at=c( xlim= c(seq(.12, .22, by = .025)))) # labels = NA prevents the creation of the numbers and tick marks, tck is how long the tick mark is.
colnames(p.out) <- c("Effect Size", "P-Value")
plot(p.out,axes =F, type ="b", main = "Significance by Effect Size given Fixed Sample", col = "aquamarine4", lwd=2 )
axis(side=1,tck=0.012,at=c( xlim= c(seq(.12, .22, by = .025)))) # labels = NA prevents the creation of the numbers and tick marks, tck is how long the tick mark is.
axis(side=1,tck=0.012,at=c( xlim= c(seq(.12, .22, by = .01)))) # labels = NA prevents the creation of the numbers and tick marks, tck is how long the tick mark is.
plot(p.out,axes =F, type ="b", main = "Significance by Effect Size given Fixed Sample", col = "aquamarine4", lwd=2 )
axis(side=1,tck=0.012,at=c( xlim= c(seq(.12, .22, by = .01)))) # labels = NA prevents the creation of the numbers and tick marks, tck is how long the tick mark is.
plot(p.out,axes =F, type ="b", main = "Significance by Effect Size given Fixed Sample", col = "aquamarine4", lwd=2 )
axis(side=1,tck=0.012,at=c( xlim= c(seq(.12, .225, by = .01)))) # labels = NA prevents the creation of the numbers and tick marks, tck is how long the tick mark is.
plot(p.out,axes =F, type ="b", main = "Significance by Effect Size given Fixed Sample", col = "aquamarine4", lwd=2 )
axis(side=1,tck=0.012,at=c( xlim= c(seq(.12, .229, by = .01)))) # labels = NA prevents the creation of the numbers and tick marks, tck is how long the tick mark is.
plot(p.out,axes =F, type ="b", main = "Significance by Effect Size given Fixed Sample", col = "aquamarine4", lwd=2 )
axis(side=1,tck=-0.015,at=c( xlim= c(seq(.12, .229, by = .01)))) # labels = NA prevents the creation of the numbers and tick marks, tck is how long the tick mark is.
plot(p.out,x.axes =F, type ="b", main = "Significance by Effect Size given Fixed Sample", col = "aquamarine4", lwd=2 )
axis(side=1,tck=-0.015,at=c( xlim= c(seq(.12, .229, by = .01)))) # labels = NA prevents the creation of the numbers and tick marks, tck is how long the tick mark is.
p.out <- rev(p.out)
p.out
plot(p.out,x.axes =F, type ="b", main = "Significance by Effect Size given Fixed Sample", col = "aquamarine4", lwd=2 )
axis(side=1,tck=-0.015,at=c( xlim= c(seq(.12, .229, by = .01)))) # labels = NA prevents the creation of the numbers and tick marks, tck is how long the tick mark is.
axis(side=2,tck=-0.015,at=c( ylim= c(seq(.12, .229, by = .01)))) # labels = NA prevents the creation of the numbers and tick marks, tck is how long the tick mark is.
plot(p.out,y.axes =F, type ="b", main = "Significance by Effect Size given Fixed Sample", col = "aquamarine4", lwd=2 )
axis(side=2,tck=-0.015,at=c( ylim= c(seq(.12, .229, by = .01)))) # labels = NA prevents the creation of the numbers and tick marks, tck is how long the tick mark is.
pwr.t.test(n = 1000, d = , sig.level = (.05), power =.8)
library(pwr)
pwr.t.test(n = 1000, d = , sig.level = (.001), power =.8)[2]
pwr.t.test(n = 1000, d = , sig.level = (.01), power =.8)
?pwr.t.test
pwr.t.test(n = 1000, d = , sig.level = (.05), power =.8)
seq(.4:.5, by=.05)
p.out <-as.data.frame(cbind(seq(.4,.9, by=.05), NA))
p.out
for(i in 1:length(seq(.4:.5, by=.05))){
p.out[i,2] <- pwr.t.test(n = 1000, d = , sig.level = .05, power =p.out[i,1])[2]
}
p.out[1,1]
p.out
p.out <-as.data.frame(cbind(seq(.4,.9, by=.05), NA))
p.out
for(i in 1:length(seq(.4:.5, by=.05))){
p.out[i,2] <- pwr.t.test(n = 1000, d = , sig.level = .05, power =p.out[i,1])[2]
}
p.out
colnames(p.out) <- c("Power", "Effect Size")
p.out
p.out
p.out
plot(p.out, type ="b", main = "Significance by Effect Size given Fixed Sample", col = "aquamarine4", lwd=2 )
plot(p.out, type ="b", main = "Significance by Effect Size given Fixed Sample", col = "aquamarine4", lwd=2 )
p.out <- cbind(rev(p.out[,2]), rev(p.out[,1]))
p.out <- as.data.frame(p.out)
p.out
colnames(p.out) <- c("Power", "Effect Size")
plot(p.out, type ="b", main = "Significance by Effect Size given Fixed Sample", col = "aquamarine4", lwd=2 )
plot(p.out, type ="b", main = "Significance by Effect Size given Fixed Sample", col = "aquamarine4", lwd=2 )
p.out
colnames(p.out) <- c("Effect Size", "Power")
p.out
plot(p.out, type ="b", main = "Significance by Effect Size given Fixed Sample", col = "aquamarine4", lwd=2 )
colnames(p.out) <- c("Effect Size", "Probability of Rejecting the Null")
plot(p.out, type ="b", main = "Significance by Effect Size given Fixed Sample", col = "aquamarine4", lwd=2 )
p.out <-as.data.frame(cbind(seq(.1,.9, by=.05), NA))
for(i in 1:length(seq(.1:.5, by=.05))){
p.out[i,2] <- pwr.t.test(n = 1000, d = , sig.level = .05, power =p.out[i,1])[2]
}
p.out
p.out <- cbind(rev(p.out[,2]), rev(p.out[,1]))
p.out <-as.data.frame(cbind( NA,seq(.1,.9, by=.05)))
for(i in 1:length(seq(.1:.5, by=.05))){
p.out[i,1] <- pwr.t.test(n = 1000, d = , sig.level = .05, power =p.out[i,2])[2]
}
p.out
colnames(p.out) <- c("Effect Size", "Probability of Rejecting the Null")
p.out
plot(p.out, type ="b", main = "Significance by Effect Size given Fixed Sample", col = "aquamarine4", lwd=2 )
plot(p.out, type ="b", main = "Significance by Effect Size given Fixed Sample", col = "aquamarine4", lwd=2 )
my_data <- read.csv('Expends2002.csv')
setwd("C:/Users/dl0ck/OneDrive/Spring2020/Political Data Science/Problem Sets/PS 1")
my_data <- read.csv('Expends2002.csv')
my_data <- data.frame(my_data) #Open the dataset as a dataframe
colnames(my_data) #list column name
my_data$ID #list row ID name
my_data$F4Zip<-as.numeric(substr(as.character(my_data$Zip), 1,4))
my_data$F4Zip<-sapply(as.character(my_data$F4Zip),strsplit,split=character(0))
my.vector<-as.integer(unlist(my_data$F4Zip))
sort(table(my.vector),decreasing=TRUE)[1:3]
my_data$F4Zip<-as.numeric(substr(as.character(my_data$Zip), 1,4))
names(which(max(table(my_data$F4Zip))==table(my_data$F4Zip)))
#-EXTRA CREDIT: A variable that provides the most common letter in the Descrip variable.
#####This did not run for me so if you can report the most common letter I can give you the extra point
my_data$MostCommonDescrip<-sapply(as.character(my_data$Descrip),strsplit,split=character(0))
my_data$MostCommonDescrip
my_data$MostCommonDescrip<-names(sort(summary(as.factor(my_data$MostCommonDescrip)), decreasing=T)[1])
expenditures<-read.csv("Expends2002.csv", header=T)
#8-3: Used substr() and split() to stick all of these in a vector. Then found out
#### -1
#### I think you misunderstood. So here I wanted you to get four digit codes and find the most frequent four digit code
# Try:
exp.df$ZipChars <- sapply(as.character(exp.df$Zip), substr, start=1, stop=4)
exp.df <- as.data.frame(expenditures) #It was already a dataframe btw. you could have checked with class(expenditures)
#8-3: Used substr() and split() to stick all of these in a vector. Then found out
#### -1
#### I think you misunderstood. So here I wanted you to get four digit codes and find the most frequent four digit code
# Try:
exp.df$ZipChars <- sapply(as.character(exp.df$Zip), substr, start=1, stop=4)
exp.df$ZipChars
##>> median(exp.df$ZipChars)
names(which(max(table(exp.df$ZipChars))==table(exp.df$ZipChars)))
names(which(max(table(exp.df$ZipChars))==table(exp.df$ZipChars)))
exp.df$ZipChars <- sapply(as.character(exp.df$Zip), substr, start=1, stop=4)
names(which(max(table(exp.df$ZipChars))==table(exp.df$ZipChars)))
#df = read.table("Expends2002.txt", header = T, sep = ",", row.names = "ID")
df= read.csv('Expends2002.csv')
my_data <- read.csv('Expends2002.csv')
my_data$F4Zip<-as.numeric(substr(as.character(my_data$Zip), 1,4))
my_data$F4Zip<-sapply(as.character(my_data$F4Zip),strsplit,split=character(0))
my.vector<-as.integer(unlist(my_data$F4Zip))
sort(table(my.vector),decreasing=TRUE)[1:3]
